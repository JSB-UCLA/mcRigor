[{"path":"/articles/mcRigor-1-detect-dubmc.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Functionality 1: detect dubious metacells for a given metacell partition","text":"tutorial, show use mcRigor detect dubious metacells given metacell partition. demonstrate functionality mcRigor semi-synthetic single cell RNA sequencing (scRNA-seq) dataset known ground truth trustworthiness metacells.","code":""},{"path":"/articles/mcRigor-1-detect-dubmc.html","id":"input-preparation","dir":"Articles","previous_headings":"","what":"Input preparation","title":"Functionality 1: detect dubious metacells for a given metacell partition","text":"Two main inputs required functionality: 1. raw scRNA-seq data 2. given metacell partition generated either existing metacell partitioning methods ad hoc approaches. raw scRNA-seq data needs provided Seurat object, obj_singlecell. semi-synthetic scRNA-seq data, whose generation process described Liu Li, 2024, stored rds file syn.rds, available mcRigor package example. first load data. metacell partition provided dataframe, cell_membership, showing assignment single cells metacells. Specifically, dataframe one column row dataframe represents one single cell. metacell partitions semi-synthetic scRNA-seq data generated SEACells method (Persad et al., 2023), stored csv file seacells_cell_membership_rna_syn.csv, available mcRigor package example. csv file contains series metacell partitions, generated different granularity levels. Note granularity level, γ\\gamma, key parameter metacell partitioning defined ratio number single cells number metacells. tutorial, focus metacell partition given granularity level γ=50\\gamma = 50.","code":"sc_dir = system.file('extdata', 'syn.rds', package = 'mcRigor') obj_singlecell= readRDS(file = sc_dir) obj_singlecell #> An object of class Seurat  #> 2000 features across 13400 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  3 layers present: counts, data, scale.data #>  2 dimensional reductions calculated: pca, umap membership_dir = system.file('extdata', 'seacells_cell_membership_rna_syn.csv', package = 'mcRigor') cell_membership_all <- read.csv(file = membership_dir, check.names = F, row.names = 1) cell_membership <- cell_membership_all['50'] head(cell_membership) #>                               50 #> 1_Cell1 mc50-allcells-SEACell-98 #> 2_Cell1 mc50-allcells-SEACell-98 #> 3_Cell1 mc50-allcells-SEACell-98 #> 4_Cell1 mc50-allcells-SEACell-98 #> 5_Cell1 mc50-allcells-SEACell-98 #> 6_Cell1 mc50-allcells-SEACell-98"},{"path":"/articles/mcRigor-1-detect-dubmc.html","id":"detection-of-dubious-metacells","dir":"Articles","previous_headings":"","what":"Detection of dubious metacells","title":"Functionality 1: detect dubious metacells for a given metacell partition","text":"call function mcRigor_DETECT detect dubious metacells metacell partition represented cell_membership. Seurat object metacells stored obj_metacell field output detect_res.mcRigor detection results recorded mc_res field output detect_res well metadata Seurat object name mcRigor.","code":"detect_res = mcRigor_DETECT(obj_singlecell = obj_singlecell, cell_membership = cell_membership) table(detect_res$mc_res) #>  #>     dubious trustworthy  #>          56         212 obj_metacell = detect_res$obj_metacell head(obj_metacell$mcRigor) #>   mc50-allcells-SEACell-0   mc50-allcells-SEACell-1  mc50-allcells-SEACell-10  #>             \"trustworthy\"                 \"dubious\"                 \"dubious\"  #> mc50-allcells-SEACell-100 mc50-allcells-SEACell-101 mc50-allcells-SEACell-102  #>             \"trustworthy\"             \"trustworthy\"             \"trustworthy\""},{"path":"/articles/mcRigor-1-detect-dubmc.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Functionality 1: detect dubious metacells for a given metacell partition","text":"function mcRigor_projection can draw metacells projected two-dimensional embedding space single cells mark detected dubious metacells  dubious metacells marked red circles trustworthy metacells black circles.","code":"sc_membership = obj_metacell@misc$cell_membership$Metacell names(sc_membership) = rownames(obj_metacell@misc$cell_membership)  plot = mcRigor_projection(obj_singlecell = obj_singlecell, sc_membership = sc_membership,                            color_field = 'celltype.l1',                            dub_mc_test.label = T, test_stats = detect_res$TabMC, Thre = detect_res$thre) plot"},{"path":"/articles/mcRigor-1-detect-dubmc.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Functionality 1: detect dubious metacells for a given metacell partition","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_4.0.0      Seurat_5.3.0       SeuratObject_5.2.0 sp_2.2-0           #> [5] mcRigor_1.0        BiocStyle_2.36.0   #>  #> loaded via a namespace (and not attached): #>   [1] deldir_2.0-4           pbapply_1.7-4          gridExtra_2.3          #>   [4] rlang_1.1.6            magrittr_2.0.4         RcppAnnoy_0.0.22       #>   [7] spatstat.geom_3.6-0    matrixStats_1.5.0      ggridges_0.5.7         #>  [10] compiler_4.5.1         reshape2_1.4.4         png_0.1-8              #>  [13] systemfonts_1.3.1      vctrs_0.6.5            stringr_1.5.2          #>  [16] pkgconfig_2.0.3        fastmap_1.2.0          labeling_0.4.3         #>  [19] promises_1.3.3         rmarkdown_2.30         ragg_1.5.0             #>  [22] purrr_1.1.0            xfun_0.53              cachem_1.1.0           #>  [25] jsonlite_2.0.0         goftest_1.2-3          later_1.4.4            #>  [28] spatstat.utils_3.2-0   irlba_2.3.5.1          parallel_4.5.1         #>  [31] cluster_2.1.8.1        R6_2.6.1               ica_1.0-3              #>  [34] spatstat.data_3.1-8    stringi_1.8.7          bslib_0.9.0            #>  [37] RColorBrewer_1.1-3     reticulate_1.43.0      spatstat.univar_3.1-4  #>  [40] parallelly_1.45.1      lmtest_0.9-40          jquerylib_0.1.4        #>  [43] scattermore_1.2        Rcpp_1.1.0             bookdown_0.45          #>  [46] knitr_1.50             tensor_1.5.1           future.apply_1.20.0    #>  [49] zoo_1.8-14             sctransform_0.4.2      httpuv_1.6.16          #>  [52] Matrix_1.7-3           splines_4.5.1          igraph_2.2.0           #>  [55] tidyselect_1.2.1       abind_1.4-8            yaml_2.3.10            #>  [58] spatstat.random_3.4-2  spatstat.explore_3.5-3 codetools_0.2-20       #>  [61] miniUI_0.1.2           listenv_0.9.1          plyr_1.8.9             #>  [64] lattice_0.22-7         tibble_3.3.0           withr_3.0.2            #>  [67] shiny_1.11.1           S7_0.2.0               ROCR_1.0-11            #>  [70] evaluate_1.0.5         Rtsne_0.17             future_1.67.0          #>  [73] fastDummies_1.7.5      desc_1.4.3             survival_3.8-3         #>  [76] polyclip_1.10-7        fitdistrplus_1.2-4     pillar_1.11.1          #>  [79] BiocManager_1.30.26    KernSmooth_2.23-26     plotly_4.11.0          #>  [82] generics_0.1.4         RcppHNSW_0.6.0         scales_1.4.0           #>  [85] globals_0.18.0         xtable_1.8-4           glue_1.8.0             #>  [88] lazyeval_0.2.2         tools_4.5.1            data.table_1.17.8      #>  [91] RSpectra_0.16-2        RANN_2.6.2             fs_1.6.6               #>  [94] dotCall64_1.2          cowplot_1.2.0          grid_4.5.1             #>  [97] tidyr_1.3.1            nlme_3.1-168           patchwork_1.3.2        #> [100] cli_3.6.5              spatstat.sparse_3.1-0  textshaping_1.0.4      #> [103] spam_2.11-1            viridisLite_0.4.2      dplyr_1.1.4            #> [106] uwot_0.2.3             gtable_0.3.6           sass_0.4.10            #> [109] digest_0.6.37          progressr_0.16.0       ggrepel_0.9.6          #> [112] htmlwidgets_1.6.4      farver_2.1.2           htmltools_0.5.8.1      #> [115] pkgdown_2.1.3          lifecycle_1.0.4        httr_1.4.7             #> [118] mime_0.13              MASS_7.3-65"},{"path":"/articles/mcRigor-2-optimize.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Functionality 2: optimize metacell partitioning","text":"tutorial, show use mcRigor evaluate metacell partition select optimal granularity level specific metacell partitioning method. Note granularity level, γ\\gamma, key parameter metacell partitioning defined ratio number single cells number metacells, decent selection vital importance ensure unbiasedness metacell profiles reliability fo downstream analysis. demonstrate functionality mcRigor semi-synthetic single cell RNA sequencing (scRNA-seq) dataset known trustworthiness metacells optimal metacell partition.","code":""},{"path":"/articles/mcRigor-2-optimize.html","id":"input-preparation","dir":"Articles","previous_headings":"","what":"Input preparation","title":"Functionality 2: optimize metacell partitioning","text":"Two main inputs required functionality: 1. raw scRNA-seq data 2. series candidate metacell partitions generated specific metacell partitioning method series candidate granularity levels. raw scRNA-seq data needs provided Seurat object, obj_singlecell. semi-synthetic scRNA-seq data, whose generation process described Liu Li, 2024, stored rds file syn.rds, available mcRigor package example. first load data. candidate metacell partitions provided dataframe, cell_membership, showing assignment single cells metacells partition. Specifically, column dataframe represent matacell partition corresponding one granularity level row dataframe represent one single cell. Note require column namse dataframe set granularity level values character type. metacell partitions semi-synthetic scRNA-seq data generated SEACells method (Persad et al., 2023), stored csv file seacells_cell_membership_rna_syn.csv, available mcRigor package example.","code":"sc_dir = system.file('extdata', 'syn.rds', package = 'mcRigor') obj_singlecell= readRDS(file = sc_dir) obj_singlecell #> An object of class Seurat  #> 2000 features across 13400 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  3 layers present: counts, data, scale.data #>  2 dimensional reductions calculated: pca, umap membership_dir = system.file('extdata', 'seacells_cell_membership_rna_syn.csv', package = 'mcRigor') cell_membership <- read.csv(file = membership_dir, check.names = F, row.names = 1) cell_membership[1:3,1:3] #>                               100                       99 #> 1_Cell1 mc100-allcells-SEACell-86 mc99-allcells-SEACell-35 #> 2_Cell1 mc100-allcells-SEACell-26 mc99-allcells-SEACell-35 #> 3_Cell1 mc100-allcells-SEACell-26 mc99-allcells-SEACell-35 #>                                98 #> 1_Cell1 mc98-allcells-SEACell-131 #> 2_Cell1 mc98-allcells-SEACell-131 #> 3_Cell1 mc98-allcells-SEACell-131"},{"path":"/articles/mcRigor-2-optimize.html","id":"optimization-of-hyperparameter-selection","dir":"Articles","previous_headings":"","what":"Optimization of hyperparameter selection","title":"Functionality 2: optimize metacell partitioning","text":"call function mcRigor_OPTIMIZE evaluate metacell partition cell_membership select optimal one among . evaluation scores provided metacell partitions stored score field output optimize_res, can draw line plot evaluation scores.  output optimize_res contains optimal granularity level (best_granularity_level), evaluation score metacell partition given optimal granularity level selected (best_score), Seurat object metacells generated optimal granularity level (opt_metacell). Note optimal metacell partition may still contain dubious metacells. mcRigor dubious metacell detection results recorded metadata opt_metacell name mcRigor. user may choose exclude dubious metacells optimal partition lost information bearable.","code":"optimize_res = mcRigor_OPTIMIZE(obj_singlecell = obj_singlecell, cell_membership = cell_membership) head(optimize_res$scores) #>   gamma    DubRate  ZeroRate     Score #> 1     2 0.01106603 0.9201214 0.5344063 #> 2     3 0.01192227 0.9021871 0.5429453 #> 3     4 0.01271622 0.8864460 0.5504189 #> 4     6 0.01425247 0.8618650 0.5619413 #> 5     7 0.01478503 0.8507913 0.5672118 #> 6     8 0.01517195 0.8412219 0.5718031 optimize_res$optim_plot opt_metacell = optimize_res$opt_metacell opt_metacell #> An object of class Seurat  #> 2000 features across 319 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  2 layers present: counts, data opt_metacell_tuned = subset(opt_metacell, mcRigor == 'trustworthy')"},{"path":"/articles/mcRigor-2-optimize.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Functionality 2: optimize metacell partitioning","text":"function mcRigor_projection can visualize optimal metacell partition, metacells projected two-dimensional embedding space single cells mark detected dubious metacells  dubious metacells marked red circles trustworthy metacells black circles.","code":"sc_membership = opt_metacell@misc$cell_membership$Metacell names(sc_membership) = rownames(opt_metacell@misc$cell_membership)  plot = mcRigor_projection(obj_singlecell = obj_singlecell, sc_membership = sc_membership,                            color_field = 'celltype.l1',                            dub_mc_test.label = T, test_stats = optimize_res$TabMC, Thre = optimize_res$thre) plot"},{"path":"/articles/mcRigor-2-optimize.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Functionality 2: optimize metacell partitioning","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_4.0.0      Seurat_5.3.0       SeuratObject_5.2.0 sp_2.2-0           #> [5] mcRigor_1.0        BiocStyle_2.36.0   #>  #> loaded via a namespace (and not attached): #>   [1] deldir_2.0-4           pbapply_1.7-4          gridExtra_2.3          #>   [4] rlang_1.1.6            magrittr_2.0.4         RcppAnnoy_0.0.22       #>   [7] spatstat.geom_3.6-0    matrixStats_1.5.0      ggridges_0.5.7         #>  [10] compiler_4.5.1         reshape2_1.4.4         png_0.1-8              #>  [13] systemfonts_1.3.1      vctrs_0.6.5            stringr_1.5.2          #>  [16] pkgconfig_2.0.3        fastmap_1.2.0          labeling_0.4.3         #>  [19] promises_1.3.3         rmarkdown_2.30         ragg_1.5.0             #>  [22] purrr_1.1.0            xfun_0.53              cachem_1.1.0           #>  [25] jsonlite_2.0.0         goftest_1.2-3          later_1.4.4            #>  [28] spatstat.utils_3.2-0   irlba_2.3.5.1          parallel_4.5.1         #>  [31] cluster_2.1.8.1        R6_2.6.1               ica_1.0-3              #>  [34] spatstat.data_3.1-8    stringi_1.8.7          bslib_0.9.0            #>  [37] RColorBrewer_1.1-3     reticulate_1.43.0      spatstat.univar_3.1-4  #>  [40] parallelly_1.45.1      lmtest_0.9-40          jquerylib_0.1.4        #>  [43] scattermore_1.2        Rcpp_1.1.0             bookdown_0.45          #>  [46] knitr_1.50             tensor_1.5.1           future.apply_1.20.0    #>  [49] zoo_1.8-14             sctransform_0.4.2      httpuv_1.6.16          #>  [52] Matrix_1.7-3           splines_4.5.1          igraph_2.2.0           #>  [55] tidyselect_1.2.1       abind_1.4-8            yaml_2.3.10            #>  [58] spatstat.random_3.4-2  spatstat.explore_3.5-3 codetools_0.2-20       #>  [61] miniUI_0.1.2           listenv_0.9.1          plyr_1.8.9             #>  [64] lattice_0.22-7         tibble_3.3.0           withr_3.0.2            #>  [67] shiny_1.11.1           S7_0.2.0               ROCR_1.0-11            #>  [70] evaluate_1.0.5         Rtsne_0.17             future_1.67.0          #>  [73] fastDummies_1.7.5      desc_1.4.3             survival_3.8-3         #>  [76] polyclip_1.10-7        fitdistrplus_1.2-4     pillar_1.11.1          #>  [79] BiocManager_1.30.26    KernSmooth_2.23-26     plotly_4.11.0          #>  [82] generics_0.1.4         RcppHNSW_0.6.0         scales_1.4.0           #>  [85] globals_0.18.0         xtable_1.8-4           glue_1.8.0             #>  [88] lazyeval_0.2.2         tools_4.5.1            data.table_1.17.8      #>  [91] RSpectra_0.16-2        RANN_2.6.2             fs_1.6.6               #>  [94] dotCall64_1.2          cowplot_1.2.0          grid_4.5.1             #>  [97] tidyr_1.3.1            nlme_3.1-168           patchwork_1.3.2        #> [100] cli_3.6.5              spatstat.sparse_3.1-0  textshaping_1.0.4      #> [103] spam_2.11-1            viridisLite_0.4.2      dplyr_1.1.4            #> [106] uwot_0.2.3             gtable_0.3.6           sass_0.4.10            #> [109] digest_0.6.37          progressr_0.16.0       ggrepel_0.9.6          #> [112] htmlwidgets_1.6.4      farver_2.1.2           htmltools_0.5.8.1      #> [115] pkgdown_2.1.3          lifecycle_1.0.4        httr_1.4.7             #> [118] mime_0.13              MASS_7.3-65"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pan Liu. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu P (2025). mcRigor: mcRigor: statistical tool enhance rigor metacell partitioning. R package version 1.0, https://jsb-ucla.github.io/mcRigor/.","code":"@Manual{,   title = {mcRigor: mcRigor: a statistical tool to enhance the rigor of metacell partitioning},   author = {Pan Liu},   year = {2025},   note = {R package version 1.0},   url = {https://jsb-ucla.github.io/mcRigor/}, }"},{"path":"/index.html","id":"mcrigor","dir":"","previous_headings":"","what":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning","text":"R package mcRigor statistical method enhance rigor metacell partitioning single-cell data analysis. can used add-existing metacell partitioning methods obtaining reliable metacells. mcRigor two main functionalities: 1) detecting dubious metacells, composed heterogeneous single cells, given metacell partition, 2) optimizing hyperparameter metacell partitioning method. core mcRigor feature-correlation-based statistic measures heterogeneity metacell, null distribution derived double permutation scheme. following figure illustrates schematics mcRigor dubious metacell detection () hyperparameter optimization (b).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning","text":"install development version GitHub, please run:","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\") devtools::install_github(\"JSB-UCLA/mcRigor\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning","text":"following code demonstrates implement two main functionalities mcRigor using corresponding functions: mcRigor_DETECT mcRigor_OPTIMIZE. functions, input data include: Seurat object containing raw single cell sequencing data. dataframe specifying metacell partitions rectify optimize. important difference two functions lies requirements second input: mcRigor_DETECT requires single metacell partition input since purpose detect dubious metacells within given partition, mcRigor_OPTIMIZE requires series metacell partitions input since goal identify optimal partition provided candidates. Note metacell partitions can obtained using existing metacell partitioning methods (e.g., SEACells, MetaCell, MetaCell2, SuperCell) ad-hoc approaches. example input : implement first functionality: detecting dubious metacells. arguments mcRigor_DETECT() include: obj_singlecell: Seurat object original single cell sequencing data. cell_membership: dataframe, column contains metacell membership single cells given γ\\gamma (granularity level). column names corresponding γ\\gamma’s (character type). row names single cell ids. tgamma: integer ofthe target γ\\gamma value — γ\\gamma (character type) corresponding metacell partition dubious metacells detection performed. tgamma column names cell_membership. tgamma = NULL, dubious metacells detection performed metacell partition represented first column cell_membership. Default NULL. assay_type: charater type data assay using (‘RNA’ ‘ATAC’), depending different normalization used. Default ‘RNA’. feature_use: integer number genes use metacell testing. Default 2000. aggregate_method: character method aggregate single cell profiles metacell profiles. Default ‘mean’, means metacell expression computed mean single cell expression within. Nrep: integer number permutation repetitions use deriving null. Default 1. test_cutoff: float test size dubious metacell detection testing. Default 0.05. thre_smooth: boolean indicating whether smooth threshold function (lowess smoothing). Default TRUE. thre_bw: float. thre_smooth True, thre_bw specifies bandwidth smoothing. Default 1/6. mcRigor detection results, indicating whether metacell classified dubious trustworthy, stored mc_res field output object detect_res. implement second functionality: optimizing hyperparameter metacell partitioning method. use SEACells example . Besides arguments mcRigor_DETECT(), mcRigor_OPTIMIZE() one additional argument: Gammas: vector integers characters specify candidate pool granularity levels consider optimization. Default NULL, means granularity levels cell_membership considered. weight: float 0 1, sepcifies weight dubious rate tradeoff metacell partition evaluation. Default 0.5. output optimize_res contains optimal granularity level (best_granularity_level) Seurat object metacells generated optimal granularity level (opt_metacell). can visualize optimal metacell partition using function mcRigor_projection, metacells projected two-dimensional embedding space single cells detected dubious metacells marked red circles","code":"sc_dir = system.file('extdata', 'syn.rds', package = 'mcRigor') obj_singlecell= readRDS(file = sc_dir)  # A Seurat object containing the raw scRNA-seq data  membership_dir = system.file('extdata', 'seacells_cell_membership_rna_syn.csv', package = 'mcRigor') cell_membership_all <- read.csv(file = membership_dir, check.names = F, row.names = 1)  # A dataframe containing a series of candidate metacell partitions to optimize. cell_membership <- cell_membership_all['50']  # A dataframe containing one metacell partition to rectify. detect_res = mcRigor_DETECT(obj_singlecell = obj_singlecell,                              cell_membership = cell_membership,                             tgamma = NULL,                             assay_type = 'RNA',                             feature_use = 2000,                             aggregate_method = 'mean',                             Nrep = 1,                             test_cutoff = 0.05,                             thre_smooth = TRUE,                             thre_bw = 1/6) detect_res$mc_res optimize_res = mcRigor_OPTIMIZE(obj_singlecell = obj_singlecell, cell_membership = cell_membership_all) opt_metacell = optimize_res$opt_metacell  sc_membership = opt_metacell@misc$cell_membership$Metacell names(sc_membership) = rownames(opt_metacell@misc$cell_membership)  plot = mcRigor_projection(obj_singlecell = obj_singlecell, sc_membership = sc_membership,                            color_field = 'celltype.l1',                            dub_mc_test.label = T, test_stats = optimize_res$TabMC, Thre = optimize_res$thre) plot"},{"path":"/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning","text":"detailed tutorials, please check website. tutorials demonstrate two main functionalities mcRigor semi-synthetic dataset bone marrow mononuclear cells measured CITE-seq. Functionality 1: detect dubious metacells given metacell partition Functionality 2: optimize metacell partitioning","code":""},{"path":"/index.html","id":"related-paper","dir":"","previous_headings":"","what":"Related Paper","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning","text":"mcRigor: Liu, P. Li, J.J. mcRigor: statistical method enhance rigor metacell partitioning single-cell data analysis. bioRxiv (2024).","code":""},{"path":"/reference/mcRigor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning — mcRigor-package","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning — mcRigor-package","text":"Detection dubiuos metacells optimization metacell partitioning.","code":""},{"path":"/reference/mcRigor-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning — mcRigor-package","text":"DESCRIPTION file: package yet installed build time.   Index:  package yet installed build time.  ~~ overview use package, including important functions ~~","code":""},{"path":"/reference/mcRigor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning — mcRigor-package","text":"Pan Liu Maintainer: Pan Liu <panliu23@g.ucla.edu>","code":""},{"path":"/reference/mcRigor-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mcRigor: a statistical tool to enhance the rigor of metacell partitioning — mcRigor-package","text":"~~ Literature references background information ~~","code":""},{"path":[]},{"path":"/reference/mcRigor_DETECT.html","id":null,"dir":"Reference","previous_headings":"","what":"Main functionality 1: To detect dubious metacells for a given metacell partition — mcRigor_DETECT","title":"Main functionality 1: To detect dubious metacells for a given metacell partition — mcRigor_DETECT","text":"Main functionality 1: detect dubious metacells given metacell partition","code":""},{"path":"/reference/mcRigor_DETECT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main functionality 1: To detect dubious metacells for a given metacell partition — mcRigor_DETECT","text":"","code":"mcRigor_DETECT(   obj_singlecell,   cell_membership = NULL,   tgamma = NULL,   assay_type = c(\"RNA\", \"ATAC\"),   aggregate_method = c(\"mean\", \"sum\", \"geom\"),   output_file = NULL,   Nrep = 1,   gene_filter = 0.1,   feature_use = 2000,   cor_method = c(\"pearson\", \"spearman\"),   prePro = T,   test_cutoff = 0.01,   thre_smooth = T,   thre_bw = 1/6,   draw = T,   pur_metric = NULL,   check_purity = T,   fields = NULL,   step_save = T )"},{"path":"/reference/mcRigor_DETECT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main functionality 1: To detect dubious metacells for a given metacell partition — mcRigor_DETECT","text":"obj_singlecell Seurat object original single cells. cell_membership dataframe, column contains metacell membership single cells given gamma (granularity level). column names corresponding gamma's (character type). row names single cell id's. tgamma target gamma value — gamma (character type) corresponding metacell partition dubious metacells detection performed. tgamma column names cell_membership. tgamma = NULL, dubious metacells detection performed metacell partition represented first column cell_membership. assay_type type data assay yuo using, depending different normalization used. aggregate_method method aggregate single cell profiles metacell profiles output_file directory output saving Nrep number permutation repetitions use deriving null. gene_filter proportion. Genes expressed lower proportion filtered . feature_use number genes use metacell testing. cor_method method gene correlation calculation description prePro boolean indicating whether normalize obj_singlecell preprocessing. test_cutoff test size dubious metacell detection testing thre_smooth boolean indicating whether smooth threshold function thre_bw thre_smooth True, thre_bw specifies bandwidth smoothing draw boolean indicating whether visualize mcRigor results pur_metric Can NULL metadata variable name, ex. cell type. check_purity boolean indicating whether calculate metacell purity specific fields . fields vector fields interest, ex. celltype. subset obj_singlecell's meta.data. step_save boolean indicating whether save outputs step step","code":""},{"path":"/reference/mcRigor_DETECT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main functionality 1: To detect dubious metacells for a given metacell partition — mcRigor_DETECT","text":"list containing following fields: mc_res named vector indicating whether metacll dubious trustworthy obj_metacell metacell Seurat object mcRigor detection results metadata thre thresholds dubious metacell detection TabMC dataframe containing permutation results, elements calculate test statistics mcDiv mcDiv null test_plot scatter plots demonstrating mcDiv values obtained thresholds dubious metacell detection purity_plot violin plot showing purity distribution pur_metric covariate dubious metacells trustworthy metacells","code":""},{"path":"/reference/mcRigor_OPTIMIZE.html","id":null,"dir":"Reference","previous_headings":"","what":"Main functionality 2: To select the optimal hyperparameter for metacell partitioning — mcRigor_OPTIMIZE","title":"Main functionality 2: To select the optimal hyperparameter for metacell partitioning — mcRigor_OPTIMIZE","text":"Main functionality 2: select optimal hyperparameter metacell partitioning","code":""},{"path":"/reference/mcRigor_OPTIMIZE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main functionality 2: To select the optimal hyperparameter for metacell partitioning — mcRigor_OPTIMIZE","text":"","code":"mcRigor_OPTIMIZE(   obj_singlecell,   cell_membership = NULL,   assay_type = c(\"RNA\", \"ATAC\"),   Gammas = NULL,   aggregate_method = c(\"mean\", \"sum\", \"geom\"),   output_file = NULL,   Nrep = 1,   gene_filter = 0.1,   feature_use = 2000,   cor_method = c(\"pearson\", \"spearman\"),   prePro = T,   test_cutoff = 0.01,   thre_smooth = T,   thre_bw = 1/6,   D_bw = 10,   optim_method = c(\"tradeoff\", \"dub_rate_large\", \"dub_rate_small\"),   weight = 0.5,   dub_rate = 0.1,   draw = T,   pur_metric = NULL,   check_purity = T,   fields = NULL,   step_save = T )"},{"path":"/reference/mcRigor_OPTIMIZE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main functionality 2: To select the optimal hyperparameter for metacell partitioning — mcRigor_OPTIMIZE","text":"obj_singlecell Seurat object original single cells. cell_membership dataframe, column contains metacell membership single cells given gamma. column names corresponding gamma's. row names single cell id's. assay_type type data assay yuo using, depending different normalization used. Gammas candidate pool granularity levels consider optimization aggregate_method method aggregate single cell profiles metacell profiles output_file directory output saving Nrep number permutation repetitions use deriving null. gene_filter proportion. Genes expressed lower proportion filtered . feature_use number genes use metacell testing. cor_method method gene correlation calculation description prePro boolean indicating whether normalize obj_singlecell preprocessing. test_cutoff test size dubious metacell detection testing thre_smooth boolean indicating whether smooth threshold function thre_bw thre_smooth True, thre_bw specifies bandwidth smoothing. D_bw boolean indicating whether smooth dubious rate respect metacell size optim_method method used granularity level optimization. Default trading sparsity dubious rate weight weight dubious rate tradeoff. dub_rate tradeoff used optimization, highest acceptable dubious rate draw boolean indicating whether visualize mcRigor results pur_metric Can NULL metadata variable name, ex. cell type. check_purity boolean indicating whether calculate metacell purity specific fields . fields vector fields interest, ex. celltype. subset obj_singlecell's meta.data. step_save boolean indicating whether save outputs step step","code":""},{"path":"/reference/mcRigor_OPTIMIZE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main functionality 2: To select the optimal hyperparameter for metacell partitioning — mcRigor_OPTIMIZE","text":"list containing following fields: best_granularity_level optimal granularity level selected mcRigor best_Score evaluation score metacell partition given optimal granularity level selected mcRigor opt_metacell metacell object build optimal granularity level scores data frame containing evaluation scores gamma optim_plot line plot visualize tradeoff hyperparameter opimization. thre thresholds dubious metacell detection TabMC dataframe containing permutation results, elements calculate test statistics mcDiv mcDiv null","code":""},{"path":"/reference/mcRigor_buildmc.html","id":null,"dir":"Reference","previous_headings":"","what":"To build an metacell object from the given metacell partitioning — mcRigor_buildmc","title":"To build an metacell object from the given metacell partitioning — mcRigor_buildmc","text":"build metacell object given metacell partitioning (sc_membership)","code":""},{"path":"/reference/mcRigor_buildmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To build an metacell object from the given metacell partitioning — mcRigor_buildmc","text":"","code":"mcRigor_buildmc(   obj_singlecell,   sc_membership = NULL,   assay_type = c(\"RNA\", \"ATAC\"),   doNorm = T,   aggregate_method = c(\"mean\", \"sum\", \"geom\"),   doAssign = T,   fields = NULL,   covariate_method = \"absolute\",   purity_method = \"max_proportion\",   add_testres = F,   test_stats = NULL,   Thre = NULL,   test_cutoff = 0.01,   prePro = F,   feature_use = 2000,   gene_filter = 0.1,   cor_method = c(\"pearson\", \"spearman\") )"},{"path":"/reference/mcRigor_buildmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To build an metacell object from the given metacell partitioning — mcRigor_buildmc","text":"obj_singlecell Seurat object single cells sc_membership named vector (dataframe) metacell membership single cells assay_type type data assay yuo using, depending different normalization used. doNorm bool indicating whether perform normalization metacell object (obj_metacell) aggregate_method method aggregate single cell profiles metacell profiles doAssign bool indicating whether assign covariates metacells fields vector covariate names assign covariate_method Method define abundant cell covariate within metacells. Available: \"jaccard\", \"relative\", \"absolute\" (default). jaccard - assign metacell covariate maximum jaccard coefficient (recommended) relative - assign metacell covariate maximum relative abundance (normalized cluster size), may result assignment metacells poorly represented (small) covariate due normalization absolute - assign metacell covariate maximum absolute abundance within metacell, may result disappearance poorly represented (small) clusters purity_method method compute metacell purity. \"max_proportion\" purity defined proportion abundant covariate (cell type) within super-cell \"entropy\" purity defined Shanon entropy covariates metacell consists . add_testres bool indicating whether add mcRigor results (dubious trustworthy) part obj_metacell's metadata test_stats add_testres = True, argument needed. Usually TabMC, output previous steps. Thre threshold dubious metacell detection. inputed, computed based test_stats. test_cutoff test size dubious metacell detection testing prePro boolean indicating whether normalize obj_singlecell preprocessing. feature_use number genes use metacell testing. gene_filter proportion. Genes expressed lower proportion filtered . cor_method method gene correlation calculation description","code":""},{"path":"/reference/mcRigor_buildmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To build an metacell object from the given metacell partitioning — mcRigor_buildmc","text":"Seurat object metacells","code":""},{"path":"/reference/mcRigor_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"To assist metacell object building in determining the metacell covariates (metadata) — mcRigor_covariate","title":"To assist metacell object building in determining the metacell covariates (metadata) — mcRigor_covariate","text":"assist metacell object building determining metacell covariates (metadata)","code":""},{"path":"/reference/mcRigor_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To assist metacell object building in determining the metacell covariates (metadata) — mcRigor_covariate","text":"","code":"mcRigor_covariate(   sc_covariate,   sc_membership,   method = c(\"jaccard\", \"relative\", \"absolute\") )"},{"path":"/reference/mcRigor_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To assist metacell object building in determining the metacell covariates (metadata) — mcRigor_covariate","text":"sc_covariate vector (dataframe) single cell covariates sc_membership vector (dataframe) metacell memberships single cells method method define abundant cell covariate within metacells. Available: \"jaccard\" (default), \"relative\", \"absolute\". jaccard - assign metacell covariate maximum jaccard coefficient (recommended) relative - assign metacell covariate maximum relative abundance (normalized cluster size), may result assignment metacells poorly represented (small) covariate due normalization absolute - assign metacell covariate maximum absolute abundance within metacell, may result disappearance poorly represented (small) clusters","code":""},{"path":"/reference/mcRigor_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To assist metacell object building in determining the metacell covariates (metadata) — mcRigor_covariate","text":"vector assigned metacell covariates","code":""},{"path":"/reference/mcRigor_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"To visualize a given metacell partitioning by projecting metacells onto the single cell embedding space. — mcRigor_projection","title":"To visualize a given metacell partitioning by projecting metacells onto the single cell embedding space. — mcRigor_projection","text":"visualize given metacell partitioning projecting metacells onto single cell embedding space.","code":""},{"path":"/reference/mcRigor_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To visualize a given metacell partitioning by projecting metacells onto the single cell embedding space. — mcRigor_projection","text":"","code":"mcRigor_projection(   obj_singlecell,   sc_membership = NULL,   sc.reduction = c(\"umap\", \"tsne\", \"pca\"),   dims = c(1, 2),   metric = \"size\",   add_testres = F,   test_stats = NULL,   Thre = NULL,   test_cutoff = 0.01,   color_field = NULL,   cpalette = c(\"#13678A\", \"#45C4B0\", \"#9AEBA3\", \"#BF847E\", \"#F2C12E\", \"#7E57C2\",     \"#FACFCE\", \"#9E9D24\", \"#DAFDBA\", \"#86ABD4\", \"#42A5F5\", \"#546E7A\", \"#D4E157\",     \"#76FF03\", \"#6D4C41\", \"#004D40\", \"#AB47BC\", \"#D81B60\"),   sc.alpha = 0.5,   mc.alpha = 1,   pt_size = 1,   axis_lab = F,   max_mcsize = 1000,   continuous_metric = T,   dub_mc.label = F,   dub_mc_test.label = F,   label_text = F )"},{"path":"/reference/mcRigor_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To visualize a given metacell partitioning by projecting metacells onto the single cell embedding space. — mcRigor_projection","text":"obj_singlecell Seurat object single cells sc_membership named vector (dataframe) metacell membership single cells sc.reduction single cell reduction method produce single cell embeddings dims dimensions use single cell embeddings metric variable determines sizes dots representing metacells add_testres bool indicating whether add mcRigor results (dubious trustworthy) part obj_metacell's metadata test_stats add_testres = True, argument needed. Usually TabMC, output previous steps. Thre threshold dubious metacell detection. inputed, computed based test_stats. test_cutoff test size dubious metacell detection testing color_field variable based color cells.","code":""},{"path":"/reference/mcRigor_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To visualize a given metacell partitioning by projecting metacells onto the single cell embedding space. — mcRigor_projection","text":"scatter plot metacells projected single cell 2D embedding space.","code":""},{"path":"/reference/mcRigor_purity.html","id":null,"dir":"Reference","previous_headings":"","what":"To assist metacell object building in compute the purity of metacells with respect to each covariate — mcRigor_purity","title":"To assist metacell object building in compute the purity of metacells with respect to each covariate — mcRigor_purity","text":"assist metacell object building compute purity metacells respect covariate","code":""},{"path":"/reference/mcRigor_purity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To assist metacell object building in compute the purity of metacells with respect to each covariate — mcRigor_purity","text":"","code":"mcRigor_purity(   sc_covariate,   sc_membership,   method = c(\"max_proportion\", \"entropy\")[1] )"},{"path":"/reference/mcRigor_purity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To assist metacell object building in compute the purity of metacells with respect to each covariate — mcRigor_purity","text":"sc_covariate vector single cell covariates sc_membership vector assignment single-cell data metacells method method compute metacell purity. \"max_proportion\" purity defined proportion abundant covariate (cell type) within super-cell \"entropy\" purity defined Shanon entropy covariates metacell consists .","code":""},{"path":"/reference/mcRigor_purity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To assist metacell object building in compute the purity of metacells with respect to each covariate — mcRigor_purity","text":"vector metacell purity, defined : - proportion abundant covariate within metacell method = \"max_proportion\" - Shanon entropy method = \"entropy\". 1 meaning metacell consists single cells one covariate (reference assignment)","code":""},{"path":"/reference/mcRigor_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"A building block of the main functions. To derive the thresholds for detecting dubious metacells based on the output permutation results (TabMC) — mcRigor_threshold","title":"A building block of the main functions. To derive the thresholds for detecting dubious metacells based on the output permutation results (TabMC) — mcRigor_threshold","text":"building block main functions. derive thresholds detecting dubious metacells based output permutation results (TabMC)","code":""},{"path":"/reference/mcRigor_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A building block of the main functions. To derive the thresholds for detecting dubious metacells based on the output permutation results (TabMC) — mcRigor_threshold","text":"","code":"mcRigor_threshold(   TabMC,   test_cutoff = 0.01,   thre_smooth = T,   thre_bw = 1/6,   draw = T,   palpha = 1,   org_color = c(\"red\", \"orange\", \"yellow\", \"lightblue\"),   null_color = \"#666666\",   pur_metric = NULL )"},{"path":"/reference/mcRigor_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A building block of the main functions. To derive the thresholds for detecting dubious metacells based on the output permutation results (TabMC) — mcRigor_threshold","text":"TabMC dataframe containing permutation results. Saved previous steps test_cutoff test size dubious metacell detection testing thre_smooth boolean indicating whether smooth threshold function thre_bw thre_smooth True, bandwidth smoothing draw boolean indicating whether visualize mcRigor results palpha Point alpha value transparency drawing. org_color colors indicating metacell purities interested factors null_color color null. pur_metric Name covariate want compute purity . Can NULL metadata variable name, ex. cell type.","code":""},{"path":"/reference/mcRigor_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A building block of the main functions. To derive the thresholds for detecting dubious metacells based on the output permutation results (TabMC) — mcRigor_threshold","text":"list containing following fields: threshold thresholds dubious metacell detection TabMC dataframe containing permutation results testing results given mcRigor test_plot scatter plots demonstrating mcDiv values obtained thresholds dubious metacell detection purity_plot violin plot showing purity distribution pur_metric covariate dubious metacells trustworthy metacells","code":""},{"path":"/reference/mcRigor_tradeoff.html","id":null,"dir":"Reference","previous_headings":"","what":"A building block of the main functions. To evaluate each metacell partition and optimize metacell partitioning based on the output permutation results (TabMC) and thresholds (threshold) — mcRigor_tradeoff","title":"A building block of the main functions. To evaluate each metacell partition and optimize metacell partitioning based on the output permutation results (TabMC) and thresholds (threshold) — mcRigor_tradeoff","text":"building block main functions. evaluate metacell partition optimize metacell partitioning based output permutation results (TabMC) thresholds (threshold)","code":""},{"path":"/reference/mcRigor_tradeoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A building block of the main functions. To evaluate each metacell partition and optimize metacell partitioning based on the output permutation results (TabMC) and thresholds (threshold) — mcRigor_tradeoff","text":"","code":"mcRigor_tradeoff(   TabMC,   threshold = NULL,   D_bw = 10,   optim_method = c(\"tradeoff\", \"dub_rate_large\", \"dub_rate_small\"),   dub_rate = 0.1,   weight = 0.5,   draw = T )"},{"path":"/reference/mcRigor_tradeoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A building block of the main functions. To evaluate each metacell partition and optimize metacell partitioning based on the output permutation results (TabMC) and thresholds (threshold) — mcRigor_tradeoff","text":"TabMC dataframe containing permutation results. Saved previous steps threshold dataframe containing dubious metacell detection thresholds given mcRigor_threshold D_bw boolean indicating whether smooth dubious rate respect metacell size optim_method method used granularity level optimization. Default trading sparsity dubious rate dub_rate tradeoff used optimization, highest acceptable dubious rate weight weight dubious rate tradeoff. draw boolean indicating whether visualize mcRigor results","code":""},{"path":"/reference/mcRigor_tradeoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A building block of the main functions. To evaluate each metacell partition and optimize metacell partitioning based on the output permutation results (TabMC) and thresholds (threshold) — mcRigor_tradeoff","text":"list containing following fields: optimized optimization results, containing optimal gamma corresponding Sore scores data frame containing evaluation scores gamma optim_plot line plot visualize tradeoff hyperparameter opimization.","code":""}]
